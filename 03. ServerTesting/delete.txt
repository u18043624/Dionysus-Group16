in my index.js

const express = require('express');
const app = express();
const bodyParser = require('body-parser');
const cors = require('cors');
const path = require('path');

//routes
const usersRoutes = require('./routes/users');
const customerRoutes = require('./routes/customer');
const ownerRoutes = require('./routes/owner');
const wineRoutes = require('./routes/wine');
const wineryRoutes = require('./routes/winery');
const reviewRoutes = require('./routes/review');
const eventRoutes = require('./routes/event');

/* ----------module implementation-----------------------------------------------*/

app.use(express.json());
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: true }));
app.use(cors({
    origin: '*', //can  just to be just url of actual site
    methods: ['GET', 'POST', 'PUT', 'DELETE'],
    allowedHeaders: ['Content-Type', 'Authorization'],
}));

//Opens Login Page (front Page)

app.use(express.static(path.join(__dirname, '../../00. Website/assets')));

app.get('/', function(req, res) {
    res.sendFile(path.join(__dirname, '../../00. Website/assets/login.html'));
});

/* ---------- user uses ---------------------------------------------------- */

app.use('/users', usersRoutes);

/* ---------- owner fetches ---------------------------------------------------- */

app.use('/owner', ownerRoutes);

/* ---------- customer fetches ---------------------------------------------------- */

app.use('/customer', customerRoutes);

/* ---------- wine uses ---------------------------------------------------- */

app.use('/wine', wineRoutes);

/* ---------- winery fetches ---------------------------------------------------- */

app.use('/winery', wineryRoutes);

/* ---------- review fetches ---------------------------------------------------- */

app.use('/review', reviewRoutes);

/* ---------- event fetches ---------------------------------------------------- */

app.use('/events', eventRoutes);

/* --------------------------------------------------------------------------- */

const PORT = process.env.PORT || 3030;
app.listen(PORT, async () => {
  console.log(`server running on port ${PORT} ...`);

  // Opens the url in the default browser
  const open = await import('open');
  open.default(`http://localhost:${PORT}`);
});

in my login html

</head>
<body>
    <div id="Background">
    <h1>Login</h1>

    <div class="container">
        <form id="loginForm" method="post" >
            <label for="email">Email</label>
            <input type="email" id="email" name="email"><br><br>

            <label for="password">Password:</label>
            <input type="password" id="password" name="password"><br><br>

            <input class="signupbtn" type="submit" value="Login">
        </form>
        <button class="signupbtn"> <a href="start.html"> Welcome page </a>  </button>
        <br>
        

        <!-- <a href="SignupUser.html"  class="center-link"> Tourist SignUp</a>
        <br>
        <a href="signupOwner.html"  class="center-link"> Owner SignUp</a> -->
    </div>
</div>
<script src="../../../../03. ServerTesting/scripts/ajax.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', () => {
    // Function to check if username and password match
    const checkLogin = (email, password, cb) => {
      getById('Users', email, (user) => {
        console.log(user.Password);
        if (!user || user.Password !== password) {
          return cb(false, null);
        }
  
        cb(true, user.Can_Manage);
      });
    };
  
    // Function to handle login button click
    const handleLogin = (e) => {
      e.preventDefault();
      const email = document.getElementById('email').value;
      const password = document.getElementById('password').value;
  
      checkLogin(email, password, (isAuthenticated, canManage) => {
        if (isAuthenticated) {
          if (canManage === 'N') {
            // Redirect customer to home.html (Replace with your own implementation)
            window.location.href = 'home.html';
          } else if (canManage === 'Y') {
            // Redirect owner to owners.html (Replace with your own implementation)
            window.location.href = 'owners.html';
          } else {
            console.error('Invalid Can_Manage attribute');
          }
        } else {
            alert('Invalid email or password');
          console.error('Invalid email or password');
        }
      });
    };
  
    // Add event listener to the login form submission
    const loginForm = document.getElementById('loginForm');
    loginForm.addEventListener('submit', handleLogin);
  });
</script>
</body>
</html>


in my console

The resource from “http://localhost:3030/css/signup_login.css” was blocked due to MIME type (“text/html”) mismatch (X-Content-Type-Options: nosniff).
localhost:3030
The resource from “http://localhost:3030/03.%20ServerTesting/scripts/ajax.js” was blocked due to MIME type (“text/html”) mismatch (X-Content-Type-Options: nosniff).
localhost:3030
The resource from “http://localhost:3030/scripts/script.js” was blocked due to MIME type (“text/html”) mismatch (X-Content-Type-Options: nosniff).
localhost:3030
The resource from “http://localhost:3030/css/signup_login.css” was blocked due to MIME type (“text/html”) mismatch (X-Content-Type-Options: nosniff).
localhost:3030
The resource from “http://localhost:3030/03.%20ServerTesting/scripts/ajax.js” was blocked due to MIME type (“text/html”) mismatch (X-Content-Type-Options: nosniff).
localhost:3030
Loading failed for the <script> with source “http://localhost:3030/03.%20ServerTesting/scripts/ajax.js”. localhost:3030:139:54
Loading failed for the <script> with source “http://localhost:3030/scripts/script.js”. localhost:3030:140:32
The resource from “http://localhost:3030/scripts/script.js” was blocked due to MIME type (“text/html”) mismatch (X-Content-Type-Options: nosniff).